version: 2
jobs:
  test:
    working_directory: ~/likecoin-store
    docker:
      - image: node:18
    resource_class: medium+
    steps:
      - checkout
      - restore_cache:
          key: likecoin-store-{{ .Environment.CACHE_UUID }}-{{ checksum "package.json" }}-{{ checksum "package-lock.json" }}-{{ checksum ".circleci/config.yml" }}
      - run:
          name: Dependencies
          command: |
            npm install
      - run:
          name: Lint Test
          command: npm run lint
      - run:
          name: Build
          command: npm run build
      - run:
          name: Server Test
          command: npm start
          background: true
      - run:
          name: wget Test
          command: |
            sleep 5
            wget -O- --retry-connrefused --waitretry=5 -t 10 http://127.0.0.1:3000/ > /dev/null
      - save_cache:
          key: likecoin-store-{{ .Environment.CACHE_UUID }}-{{ checksum "package.json" }}-{{ checksum "package-lock.json" }}-{{ checksum ".circleci/config.yml" }}
          paths:
            - ./node_modules
  deploy_testnet_frontend:
    working_directory: ~/likecoin-store
    docker:
      - image: cimg/gcp:2022.09
    resource_class: medium+
    environment:
      - DEBIAN_FRONTEND: noninteractive
      - TERM: dumb
      - GOOGLE_APPLICATION_CREDENTIALS: /tmp/account-auth.json
    steps:
      - checkout
      - run:
          name: Setup gcloud
          command: |
            echo ${TEST_GCLOUD_SERVICE_KEY} | base64 -d > /tmp/account-auth.json
            gcloud auth activate-service-account --key-file /tmp/account-auth.json
            gcloud config set project ${TEST_PROJECT_NAME}
            gcloud --quiet config set container/cluster ${POC_CLUSTER_NAME}
            gcloud config set compute/zone ${CLOUDSDK_COMPUTE_ZONE}
            gcloud --quiet container clusters get-credentials ${POC_CLUSTER_NAME}
      - setup_docker_engine
      - run:
          name: Build image
          command: |
            gcloud docker -- pull us.gcr.io/${TEST_PROJECT_NAME}/like-store-frontend:latest || true
            docker build . -t like-store --cache-from us.gcr.io/${TEST_PROJECT_NAME}/like-store-frontend:latest \
            --build-arg IS_TESTNET='TRUE' \
            --build-arg EXTERNAL_HOSTNAME='testnet.like.co' \
            --build-arg INTERCOM_APPID=${TEST_INTERCOM_APPID} \
            --build-arg GA_TRACKING_ID=${TEST_GA_TRACKING_ID} \
            --build-arg CRISP_WEBSITE_ID=${TEST_CRISP_WEBSITE_ID} \
            --build-arg SENTRY_DSN=${TEST_SENTRY_DSN} \
            --build-arg SENTRY_AUTH_TOKEN=${SENTRY_AUTH_TOKEN} \
            --build-arg SENTRY_REPORT_URI=${TEST_SENTRY_REPORT_URI} \
            --build-arg SENTRY_PROJECT=${TEST_SENTRY_PROJECT} \
            --build-arg RELEASE=${CIRCLE_SHA1}
            docker tag like-store:latest us.gcr.io/${TEST_PROJECT_NAME}/like-store-frontend:latest
            docker tag like-store:latest us.gcr.io/${TEST_PROJECT_NAME}/like-store-frontend:testnet-${CIRCLE_SHA1}
      - run:
          name: Push images
          command: |
            gcloud docker -- push us.gcr.io/${TEST_PROJECT_NAME}/like-store-frontend:latest
            gcloud docker -- push us.gcr.io/${TEST_PROJECT_NAME}/like-store-frontend:testnet-${CIRCLE_SHA1}
      - deploy:
          name: Deploy
          command: |
            kubectl patch deployment like-store-frontend-testnet -p '{"spec":{"template":{"spec":{"containers":[{"name":"like-store-frontend","image":"us.gcr.io/'"$TEST_PROJECT_NAME"'/like-store-frontend:testnet-'"$CIRCLE_SHA1"'"}]}}}}'
  deploy_rinkeby_frontend:
    working_directory: ~/likecoin-store
    docker:
      - image: cimg/gcp:2022.09
    resource_class: medium+
    environment:
      - DEBIAN_FRONTEND: noninteractive
      - TERM: dumb
      - GOOGLE_APPLICATION_CREDENTIALS: /tmp/account-auth.json
    steps:
      - checkout
      - run:
          name: Setup gcloud
          command: |
            echo ${TEST_GCLOUD_SERVICE_KEY} | base64 -d > /tmp/account-auth.json
            gcloud auth activate-service-account --key-file /tmp/account-auth.json
            gcloud config set project ${TEST_PROJECT_NAME}
            gcloud --quiet config set container/cluster ${POC_CLUSTER_NAME}
            gcloud config set compute/zone ${CLOUDSDK_COMPUTE_ZONE}
            gcloud --quiet container clusters get-credentials ${POC_CLUSTER_NAME}
      - setup_docker_engine
      - run:
          name: Build image
          command: |
            gcloud docker -- pull us.gcr.io/${TEST_PROJECT_NAME}/like-store-frontend:latest || true
            docker build . -t like-store --cache-from us.gcr.io/${TEST_PROJECT_NAME}/like-store-frontend:latest \
            --build-arg IS_TESTNET='TRUE' \
            --build-arg EXTERNAL_HOSTNAME='rinkeby.like.co' \
            --build-arg INTERCOM_APPID=${TEST_INTERCOM_APPID} \
            --build-arg GA_TRACKING_ID=${TEST_GA_TRACKING_ID} \
            --build-arg CRISP_WEBSITE_ID=${TEST_CRISP_WEBSITE_ID} \
            --build-arg SENTRY_DSN=${TEST_SENTRY_DSN} \
            --build-arg SENTRY_AUTH_TOKEN=${SENTRY_AUTH_TOKEN} \
            --build-arg SENTRY_REPORT_URI=${TEST_SENTRY_REPORT_URI} \
            --build-arg SENTRY_PROJECT=${TEST_SENTRY_PROJECT} \
            --build-arg RELEASE=${CIRCLE_SHA1}
            docker tag like-store:latest us.gcr.io/${TEST_PROJECT_NAME}/like-store-frontend:latest
            docker tag like-store:latest us.gcr.io/${TEST_PROJECT_NAME}/like-store-frontend:dev-${CIRCLE_SHA1}
      - run:
          name: Push images
          command: |
            gcloud docker -- push us.gcr.io/${TEST_PROJECT_NAME}/like-store-frontend:latest
            gcloud docker -- push us.gcr.io/${TEST_PROJECT_NAME}/like-store-frontend:dev-${CIRCLE_SHA1}
      - deploy:
          name: Deploy
          command: |
            kubectl patch deployment like-store-frontend-rinkeby -p '{"spec":{"template":{"spec":{"containers":[{"name":"like-store-frontend","image":"us.gcr.io/'"$TEST_PROJECT_NAME"'/like-store-frontend:dev-'"$CIRCLE_SHA1"'"}]}}}}'
  deploy_mainnet_frontend:
    working_directory: ~/likecoin-store
    docker:
      - image: cimg/gcp:2022.09
    environment:
      - DEBIAN_FRONTEND: noninteractive
      - TERM: dumb
      - GOOGLE_APPLICATION_CREDENTIALS: /tmp/account-auth.json
    steps:
      - checkout
      - run:
          name: Setup gcloud
          command: |
            echo ${GCLOUD_SERVICE_KEY} | base64 -d > /tmp/account-auth.json
            gcloud auth activate-service-account --key-file /tmp/account-auth.json
            gcloud config set project ${PROJECT_NAME}
            gcloud --quiet config set container/cluster ${PROD_CLUSTER_NAME}
            gcloud config set compute/zone ${CLOUDSDK_COMPUTE_ZONE}
            gcloud --quiet container clusters get-credentials ${PROD_CLUSTER_NAME}
      - setup_docker_engine
      - run:
          name: Build image
          command: |
            gcloud docker -- pull us.gcr.io/${PROJECT_NAME}/like-store-frontend:latest || true
            docker build . -t like-store --cache-from us.gcr.io/${PROJECT_NAME}/like-store-frontend:latest \
            --build-arg INTERCOM_APPID=${INTERCOM_APPID} \
            --build-arg GA_TRACKING_ID=${GA_TRACKING_ID} \
            --build-arg CRISP_WEBSITE_ID=${CRISP_WEBSITE_ID} \
            --build-arg FIREBASE_API_KEY=${FIREBASE_API_KEY} \
            --build-arg FIREBASE_AUTH_DOMAIN=${FIREBASE_AUTH_DOMAIN} \
            --build-arg FIREBASE_PROJECT_ID=${FIREBASE_PROJECT_ID} \
            --build-arg SENTRY_DSN=${SENTRY_DSN} \
            --build-arg SENTRY_AUTH_TOKEN=${SENTRY_AUTH_TOKEN} \
            --build-arg SENTRY_REPORT_URI=${SENTRY_REPORT_URI} \
            --build-arg SENTRY_PROJECT=${SENTRY_PROJECT} \
            --build-arg RELEASE=${CIRCLE_SHA1}
            docker tag like-store:latest us.gcr.io/${PROJECT_NAME}/like-store-frontend:latest
            docker tag like-store:latest us.gcr.io/${PROJECT_NAME}/like-store-frontend:main-${CIRCLE_SHA1}
      - run:
          name: Push images
          command: |
            gcloud docker -- push us.gcr.io/${PROJECT_NAME}/like-store-frontend:latest
            gcloud docker -- push us.gcr.io/${PROJECT_NAME}/like-store-frontend:main-${CIRCLE_SHA1}
      - deploy:
          name: Deploy
          command: |
            kubectl patch deployment like-store-frontend-main -p '{"spec":{"template":{"spec":{"containers":[{"name":"like-store-frontend","image":"us.gcr.io/'"$PROJECT_NAME"'/like-store-frontend:main-'"$CIRCLE_SHA1"'"}]}}}}'
workflows:
  version: 2
  build_and_test:
    jobs:
      - test
      - hold_deploy_testnet_frontend:
          type: approval
          filters:
            branches:
              only:
                - master
                - develop
                - deployment/testnet
          requires:
            - test
      - hold_deploy_rinkeby_frontend:
          type: approval
          filters:
            branches:
              only:
                - master
                - develop
                - deployment/rinkeby
          requires:
            - test
      - hold_deploy_mainnet_frontend:
          type: approval
          filters:
            branches:
              only: master
          requires:
            - test
      - deploy_testnet_frontend:
          requires:
            - hold_deploy_testnet_frontend
      - deploy_rinkeby_frontend:
          requires:
            - hold_deploy_rinkeby_frontend
      - deploy_mainnet_frontend:
          requires:
            - hold_deploy_mainnet_frontend
